name: Generate release

on: workflow_dispatch

jobs:
  generate-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure Git User
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - name: Get next release candidate
        id: next-release
        run: |
          NEXT_RELEASE=$(grep 'version=' setup.py | sed 's/version="//' | sed 's/",//' | xargs)
          echo "NEXT_RELEASE=$NEXT_RELEASE" >> $GITHUB_OUTPUT
        shell: bash

      - name: Create tag for release
        run: |
          git tag ${{ steps.next-release.outputs.NEXT_RELEASE }}
          git push origin ${{ steps.next-release.outputs.NEXT_RELEASE }}

      - name: Create new minor release
        run: .github/scripts/release.py --release ${{ steps.next-release.outputs.NEXT_RELEASE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update version in remote
        run: |
          git add setup.py
          git commit -m "chore: prepare next release candidate"
          git push

#  publish-release:
#    needs: generate-release
#    runs-on: ubuntu-latest
#    permissions:
#      contents: write
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Set up Python 3.10
#        uses: actions/setup-python@v3
#        with:
#          python-version: "3.10"
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install twine
#          pip install wheel
#
#      - name: Build release
#        run: |
#          python setup.py sdist bdist_wheel
#
#      - name: Upload to Nexus
#        run: |
#         python -m twine upload --repository-url https://tnt.autentia.com/nexus/repository/autentia-pypi/ dist/* -u ${{ secrets.NEXUS_REPOSITORY_USER }} -p ${{ secrets.NEXUS_REPOSITORY_PASSWORD }}
